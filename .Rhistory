setwd("~/Documents/HU Berlin/WI 1516/refugeestest/IS refugees")
data.refugees<-read.csv(file ="Data/Data_refugees.csv")
data_with_geoLov<-data.refugees[!is.na(data.refugees$latitude),]
HashTags<-data_with_geoLov$tags
length(HasgTags)
length(HashTags)
strsplit(as.character(HashTags[1:5]),split = " ", perl = TRUE)
tags<-strsplit(as.character(HashTags[1:100]),split = " ", perl = TRUE)
tags
tags<-strsplit(as.character(HashTags[1:1000]),split = " ", perl = TRUE)
tags<-strsplit(as.character(HashTags[1:10000]),split = " ", perl = TRUE)
tags<-strsplit(as.character(HashTags),split = " ", perl = TRUE)
tags
length(tags)
grepl("refugees", tags[1:5])
refs<-sapply(tags[1:5], function(x) grepl("refugees", x))
refs<-sapply(tags[1:100], function(x) grepl("refugees", x))
refs<-sapply(tags[1:1000], function(x) grepl("refugees", x))
refs<-sapply(tags, function(x) grepl("refugees", x))
refs
refs<-sapply(tags, function(x) sum(grepl("refugees", x)))
refs
refs<-sapply(tags, function(x) grepl("refugees", unlist(x)))
refs
tags[1]
unlist(tags[1])
refs<-sapply(tags, function(x) sum(grepl("refugees", unlist(x))))
refs
refs<-sapply(tags, function(x) grepl("refugees", x))
refs
refs<-sapply(tags, function(x) sum(repl("refugees", x)))
refs<-sapply(tags, function(x) sum(grepl("refugees", x)))
refs
refs<-sapply(tags, function(x) sum(grepl("\\<refugees\\>", x)))
refs
refs.welcome<-sapply(tags, function(x) sum(grepl("\\<regugeeswelcome\\>", x)))
refs.not.welcome<-sapply(tags, function(x) grepl("\\<refugeesnotwelcome\\>|\\<norefugees\\>|\\<überfremdung\\>|\\<wakeupeurope\\>|\\<nomorerefugees\\>", x))
refs.welcome
refs.welcome<-sapply(tags, function(x) sum(grepl("\\<refugeeswelcome\\>", x)))
refs.welcome
refs.not.welcome
refs.not.welcome<-sapply(tags, function(x) sum(grepl("\\<refugeesnotwelcome\\>|\\<norefugees\\>|\\<überfremdung\\>|\\<wakeupeurope\\>|\\<nomorerefugees\\>", x)))
refs.not.welcome
refs.not.welcome[refs.not.welcome>0]
count(refs.not.welcome[refs.not.welcome>0])
length(refs.not.welcome[refs.not.welcome>0])
negative.Indicies<-which(refs.not.welcome>0)
negative.Indicies
welcome.indicies<-which(refs.welcome>0)
which(refs.not.welcome=refs.welcome)
which(refs.not.welcome==refs.welcome)
which(negative.Indicies==welcome.indicies)
which(negative.Indicies=welcome.indicies)
f<-c(1,2,3,4)
f<-c(1,2,3,4)
which(1==f)
which(negative.Indicies==welcome.indicies)
which(c(1,2)==f)
which(c(1,2,6)==f)
which(c(1,2,6,77)==f)
which(c(1,2,6,77,678)==f)
which(c(1,2,6,77,5,678)==f)
f<-c(1,2,3,4,77)
which(c(1,2,6,77,5,678)==f)
welcome.indicies
intersect(c(1,2,6,77,5,678)==f)
intersect(negative.Indicies,  welcome.indicies)
negative.Indicies
negative.Indicies<-negative.Indicies[!intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies
negative.Indicies<-negative.Indicies[intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies
negative.Indicies<-which(refs.not.welcome>0)
negative.Indicies
intersect
intersect(negative.Indicies,  welcome.indicies)
negative.Indicies<-negative.Indicies[!intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies<-negative.Indicies[!intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies
negative.Indicies
negative.Indicies<-which(refs.not.welcome>0)
negative.Indicies
intersect(negative.Indicies,  welcome.indicies)
negative.Indicies.without.intersect<-negative.Indicies[negative.Indicies!=intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies.without.intersect
intersect(negative.Indicies,  welcome.indicies)
negative.Indicies.without.intersect<-negative.Indicies[negative.Indicies!=intersect(negative.Indicies,  welcome.indicies)]
negative.Indicies.without.intersect
negative.Indicies.without.intersect<-setdiff(negative.Indicies,intersect(negative.Indicies,  welcome.indicies))
negative.Indicies.without.intersect
length(negative.Indicies.without.intersect)
refs
indicies.refs-> which(refs>=0)
indicies.refs<-which(refs>=0)
indicies.refs
indicies.refs.wichtout.negative<-setdiff(indicies.refs,negative.Indicies.without.intersect)
indicies.refs.wichtout.negative
length(indicies.refs.wichtout.negative)
(nrow(indicies.refs.wichtout.negative)
nrow(indicies.refs.wichtout.negative)*.2)
nrow(indicies.refs.wichtout.negative)
length(indicies.refs.wichtout.negative)
sample(length(indicies.refs.wichtout.negative)*.2)
splited<-indicies.refs.wichtout.negative[sample(length(indicies.refs.wichtout.negative)*.2)]
length(splited)
length(indicies.refs.wichtout.negative)*.2
splited<-indicies.refs.wichtout.negative[length(indicies.refs.wichtout.negative)*.2]
splited
splited<-indicies.refs.wichtout.negative[sample(length(indicies.refs.wichtout.negative)*.2)]
splited
max(splited)
idizies.random<-createDataPartition(y = indicies.refs.wichtout.negative, p=0.2, list=FALSE)
require("caret")
idizies.random<-createDataPartition(y = indicies.refs.wichtout.negative, p=0.2, list=FALSE)
idizies.random
sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
rand<-sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
max(rand)
rand.indicies<-sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
set.seed(200)
rand.indicies<-sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
x<-split(rand.indicies, 1:3)
x
x<-split(rand.indicies, 1:3)
liza.indizies<-data.frame(x[1])
dima.indizies<-data.frame(x[2])
lesha.indizies<-data.frame(x[3])
rand.indizies.with.true.negatives<-append(rand.indicies, 5)
rand.indizies.with.true.negatives
rand.indicies<-sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
rand.indicies
rand.indizies.with.true.negatives<-append(rand.indicies, indicies.refs.wichtout.negative)
x<-split(rand.indicies, 1:3)
liza.indizies<-data.frame(x[1])
dima.indizies<-data.frame(x[2])
lesha.indizies<-data.frame(x[3])
liza.indizies
liza.indizies<-x[1]
dima.indizies<-x[2]
lesha.indizies<-x[3]
liza.indizies
View(data_with_geoLov)
liza.data<-data_with_geoLov[liza.indizies,c('link','id')]
dima.data<-data_with_geoLov[liza.indizies,c('link','id')]
liza.data<-data_with_geoLov[liza.indizies,c('link','id')]
View(data_with_geoLov)
liza.data<-data_with_geoLov[liza.indizies,c("link","id")]
liza.data<-data_with_geoLov[liza.indizies,]
liza.indizies
length(liza.indizies)
length(unlist(liza.indizies))
x<-split(rand.indizies.with.true.negatives, 1:3)
liza.indizies<-x[1]
dima.indizies<-x[2]
lesha.indizies<-x[3]
liza.indizies
length(unlist(liza.indizies))
length(rand.indizies.with.true.negatives)
rand.indicies<-sample(indicies.refs.wichtout.negative, length(indicies.refs.wichtout.negative)*.2)
length(rand.indicies)
length(negative.Indicies.without.intersect)
rand.indizies.with.true.negatives<-append(rand.indicies, negative.Indicies.without.intersect)
x<-split(rand.indizies.with.true.negatives, 1:3)
liza.indizies<-x[1]
dima.indizies<-x[2]
lesha.indizies<-x[3]
lesha.indizies<-x[3]
liza.data<-data_with_geoLov[unlist(liza.indizies),c('link','id')]
dima.data<-data_with_geoLov[unlist(dima.indizies),c('link','id')]
lioscha.data<-data_with_geoLov[unlist(lesha.indizies),c('link','id')]
liza.data
write.csv(liza.data, file = "Data/lizas.csv")
write.csv(dima.data, file = "Data/dima.csv")
write.csv(lioscha.data, file = "Data/lioscha.csv")
length(liza.data$link)
length(dima.data$link)
length(lioscha.data$link)
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
#Imputed Data is loaded
#trainingset_orig = getTrainigset(dir)
#numericVariables = getNumericVariables(trainingset)
#categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(numericVariables))]
continousVariablesname <- getContinousset(dir)
#Exploratory Data Analysis
source(paste0(dir, "/Code/ExploratoryDataAnalysis.R"))
#createUsefulPlots(trainingset, numericVariables, categoricVariables)
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
#trainingset <- getImputedData(trainingset)
#numericVariables = getNumericVariables(trainingset)
#categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(trainingset))]
#write.csv(trainingset, paste0(dir, "/Data/ImputedData.csv"), sep = ",")
trainingset <- read.csv(paste0(dir, "/Data/ImputedData.csv"), sep = ",")
numericVariables = getNumericVariables(trainingset)
categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(numericVariables))]
source(paste0(dir, "/Code/Utils.R"))
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
