setwd("~/Documents/HU Berlin/WI 1516/refugeestest")
source("instaAuth.R")
source("searchForHashtag.R")
source("Utils.R")
load("my_oauth")
data.refugees<-read.csv(file ="Data_refugees.csv")
data.refugees[,1]<-NULL
tagsToLoad<-c("refugeesnotwelcome","norefugees","flüchtling","überfremdung", "refugees","wakeupeurope", "refugeesnotwelcome", "norefugees","refugeecrisis","nomorerefugees","syrianrefugees")
for (i in 1:length(tagsToLoad)){
print(tagsToLoad[i])
data.on.Tag <- searchInstagram(tag=tagsToLoad[i], token=my_oauth, n = 200000)
data.refugees <- rbind(data.refugees ,data.on.Tag)
#remove dublicates
data.refugees<-data.refugees[!duplicated(data.refugees[,"id"]),]
write.csv(data.refugees, file = "Data_refugees.csv")
}
write.csv(data.refugees, file = "Data_refugees.csv")
data.refugees<-data.refugees[!duplicated(data.refugees[,"id"]),]
tagsToLoad<-c("norefugees","refugeecrisis","nomorerefugees","syrianrefugees")
for (i in 1:length(tagsToLoad)){
print(tagsToLoad[i])
data.on.Tag <- searchInstagram(tag=tagsToLoad[i], token=my_oauth, n = 200000)
data.refugees <- rbind(data.refugees ,data.on.Tag)
#remove dublicates
data.refugees<-data.refugees[!duplicated(data.refugees[,"id"]),]
write.csv(data.refugees, file = "Data_refugees.csv")
}
write.csv(data.refugees, file = "Data_refugees.csv")
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
print("tesfhsd")
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
dir <- Sys.getenv('BADS_Path')
#dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
print("tesfhsd")
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
trainingset = getTrainigset(dir)
#Exploratory Data Analysis
#churn =1
subsetData_churn_true<-trainingset[trainingset$churn==1,]
#churn = 0
subsetData_churn_false<-trainingset[trainingset$churn==0,]
hist(trainingset$adults, main = "Number of Adults")
hist(trainingset$age1, col="blue", main = "Age first household member")
hist(trainingset$age2, col="red", add=TRUE)
legend("topright", c("First Household Member","Second Household Member"),lty=c(1,1), lwd=c(2.5,2.5),col=c("blue","red"))
numericVariables = getNumericVariables(trainingset)
categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(numericVariables))]
#plots hists of all 138 numeric variables
#plotHists(numericVariables, 5)
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
numericCompleteCases <- getImputedData(numericVariables)
categoricCompleteCases <- getImputedData(categoricVariables)
completeCases <- getImputedData(trainingset)
#completeInds <- complete.cases(t(numericVariables))
#completeCases = numericVariables[completeInds]
#corrplot(cor(completeCases))
variable<-set.Outliers.To.Mean(completeCases$mou_opkv_Range, 1.5)
source(paste0(dir, "/Code/Outliers.R"))
getwd()
source(paste0(dir, "/Code/Utils.R"))
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
source(paste0(dir, "/Code/Outliers.R"))
variable<-set.Outliers.To.Mean(completeCases$mou_opkv_Range, 1.5)
boxplot(completeCases$mou_opkv_Range)
numericCompleteCases <- getImputedData(numericVariables)
source(paste0(dir,"/Code/missingValueHandler.R"))
numericCompleteCases <- getImputedData(numericVariables)
categoricCompleteCases <- getImputedData(categoricVariables)
numericVariables = getNumericVariables(trainingset)
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
source(paste0(dir, "/Code/DataLoader.R"))
trainingset = getTrainigset(dir)
categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(numericVariables))]
#plots hists of all 138 numeric variables
#plotHists(numericVariables, 5)
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
numericCompleteCases <- getImputedData(numericVariables)
categoricCompleteCases <- getImputedData(categoricVariables)
completeCases <- getImputedData(trainingset)
numericVariables = getNumericVariables(trainingset)
categoricVariables <- trainingset[setdiff(colnames(trainingset), colnames(numericVariables))]
#plots hists of all 138 numeric variables
#plotHists(numericVariables, 5)
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
numericCompleteCases <- getImputedData(numericVariables)
categoricCompleteCases <- getImputedData(categoricVariables)
completeCases <- getImputedData(trainingset)
source(paste0(dir, "/Code/Outliers.R"))
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Mean(completeCases$mou_opkv_Range, 1.5)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
boxplot(completeCases$mou_opkv_Range)
boxplot(variable)
boxplot(completeCases$mou_opkv_Range)
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
boxplot(completeCases$mou_opkv_Range)
boxplot(variable)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1)
boxplot(variable)
boxplot(completeCases$mou_opkv_Range)
boxplot(variable)
quantiles<-quantile(completeCases$mou_opkv_Range,  probs = c(0.25, 0.75))
quantiles
IQA=quantiles["75%"]-quantiles["25%"]
IQA
obere.antene<-quantiles["75%"]+IQA*whiskerFactor
obere.antene<-quantiles["75%"]+IQA*1,5
obere.antene<-quantiles["75%"]+IQA*1.5
obere.antene
untere.antene<-quantiles["25%"]-IQA*whiskerFactor
untere.antene<-quantiles["25%"]-IQA*1,5
untere.antene<-quantiles["25%"]-IQA*1.5
untere.antene
not.legal.Values.Indicies<-which(variable<untere.antene, variable>obere.antene)
not.legal.Values.Indicies
not.legal.Values.Indicies<-which(completeCases$mou_opkv_Range<untere.antene, variable>obere.antene)
not.legal.Values.Indicies
variable
not.legal.Values.Indicies<-which(completeCases$mou_opkv_Range<untere.antene, completeCases$mou_opkv_Range>obere.antene)
not.legal.Values.Indicies
untere.antene
obere.antene
max(completeCases$mou_opkv_Range)
IQA=quantiles["75%"]-quantiles["25%"]
IQA
IQA
quantiles<-quantile(completeCases$mou_opkv_Range,  probs = c(0.25, 0.75))
quantiles
mac(completeCases$mou_opkv_Range)
max(completeCases$mou_opkv_Range)
min(completeCases$mou_opkv_Range)
a<-c(1,2,3,4,5,6)
max(a)
min(completeCases$mou_opkv_Range)
max(completeCases$mou_opkv_Range)
quantiles<-quantile(completeCases$mou_opkv_Range,  probs = c(0.25, 0.75))
quantiles
IQA=quantiles["75%"]-quantiles["25%"]
IQA
obere.antene<-quantiles["75%"]+IQA*1.5
obere.antene
IQA*1.5
quantiles["75%"]
obere.antene
not.legal.Values.Indicies<-which(completeCases$mou_opkv_Range>obere.antene)
not.legal.Values.Indicies
which(a<7, a>1)
which(a<7, a>4)
which(a<7 & a>4)
which(a<7, a>4)
which(a>4, a<7)
which(a>4, a<7)
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1)
boxplot(variable)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1)
boxplot(variable)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1)
boxplot(variable)
source(paste0(dir, "/Code/Outliers.R"))
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1,5)
boxplot(variable)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
media(a)
a<-c(1,2,3,4,5,6,7)
media(a)
median(a)
mean(a)
a<-c(1,2,3,4,5,6,7,2,3,4,5)
median(a)
mean(a)
mean(variable)
median(variable)
difference.Median.Median<-abs(apply(completeCases,2, function(x) median(x)-mean(x)))
indicies <- which(difference.Median.Mean>apply(completeCases,2,median)/2)
summary(completeCases[,indicies])
completeCases
difference.Median.Median<-abs(apply(completeCases,2, function(x) median(x)-mean(x)))
difference.Median.Median
indicies <- which(difference.Median.Mean>apply(completeCases,2,median)/2)
indicies <- which(difference.Median.Median>apply(completeCases,2,median)/2)
indicies
summary(completeCases[,indicies])
difference.Median.Median<-abs(apply(completeCases,2, function(x) median(x)-mean(x)))
indicies <- which(difference.Median.Median>apply(completeCases,2,median)/2)
summary(completeCases[,indicies])
summary(variable)
summary(completeCases[,indicies])
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
quantiles<-quantile(variable,  probs = c(0.25, 0.75))
quantiles
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
mac(varibale)
max(variable)
quantiles<-quantile(completeCases$mou_opkv_Range,  probs = c(0.25, 0.75))
quantiles
obere.antene<-quantiles["75%"]+IQA*1.5
obere.antene
boxplot(completeCases$mou_opkv_Range)
boxplot(variable)
source(paste0(dir, "/Code/Outliers.R"))
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
median(variable)
median(completeCases$mou_opkv_Range)
source(paste0(dir, "/Code/Outliers.R"))
variable<-set.Outliers.To.Median(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
summary(variable)
summary(completeCases$mou_opkv_Range)
a<-c(1,2,3,4,5,6,7,2,3,4,5)
which(a>5 | a<2)
boxplot(completeCases$mou_opkv_Range)
variable<-set.Outliers.To.Antene(completeCases$mou_opkv_Range, 1.5)
boxplot(variable)
source(paste0(dir, "/Code/Outliers.R"))
variable<-handle.Outliers.for.Matrix(completeCases$mou_opkv_Range, 1.5)
dim(completeCases$mou_opkv_Range)
dim(completeCases[1:2])
variable<-handle.Outliers.for.Matrix(completeCases[1:2], 1.5)
variable
boxplot(completeCases[1:2])
boxplot(variable)
boxplot(completeCases[1:2])
boxplot(variable)
source(paste0(dir, "/Code/Outliers.R"))
#replace outliers with means for variables
boxplot(completeCases$mou_opkv_Range)
variable<-handle.Outliers.for.Matrix(completeCases[1:2], 1.5)
boxplot(completeCases[1:2])
boxplot(variable)
variable<-handle.Outliers.for.Matrix(completeCases[1:2], 1.5)
boxplot(variable)
boxplot(variable)
not.legal.Values.Indicies<-which(variable>obere.antene)
not.legal.Values.Indicies
boxplot(completeCases[1:2])
source(paste0(dir, "/Code/Outliers.R"))
variable<-handle.Outliers.for.Matrix(completeCases[1:2], 1.5)
boxplot(variable)
apply(completeCases[1:2],2, function(x) x<-set.Outliers.To.Antene(x,1.5))
variable<-apply(completeCases[1:2],2, function(x) x<-set.Outliers.To.Antene(x,1.5))
boxplot(variable)
source(paste0(dir, "/Code/Outliers.R"))
variable<-handle.Outliers.for.Matrix(completeCases[1:2], 1.5)
boxplot(completeCases[1:2])
boxplot(variable)
summary(completeCases[,indicies])
variable<-handle.Outliers.for.Matrix(completeCases, 1.5)
boxplot(completeCases)
boxplot(variable)
boxplot(completeCases)
boxplot(variable)
boxplot(completeCases)
variable<-handle.Outliers.for.Matrix(completeCases[1:(length(completeCases-2))], 1.5)
variable<-handle.Outliers.for.Matrix(completeCases[,1:(length(completeCases-2))], 1.5)
boxplot(variable)
colnames(varibale)
colnames(variable)
colnames(dataset[,1])
colnames(completeCases[,1])
colnames(completeCases[,2])
completeCases[,1]
summary(dataset[,50:78])
trainingset
summary(trainingset[,50:78])
summary(trainingset$COMP_DAT_MEANrev_Mean)
summary(trainingset$COMP_DAT_MEAN)
trainingset$COMP_DAT_MEAN
summary(trainingset$comp_vce_Mean)
summary(trainingset$comp_dat_Mean)
summary(trainingset$comp_dat_mean)
summary(trainingset$comp_dat_Mean)
summary(trainingset$comp_dat_Range)
summary(trainingset$comp_vce_Mean)
summary(trainingset$comp_vce_Mean)
