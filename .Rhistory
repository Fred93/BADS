setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
test_set = getTestset(dir)
test_set<-rebuild_components_for_training_Data(test_set)
source(paste0(dir, "/Code/PCA.R"))
test_set<-rebuild_components_for_training_Data(test_set)
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
test_set = getTestset(dir)
numericVariables = getNumericVariables(test_set)
categoricVariables <- test_set[setdiff(colnames(test_set), colnames(numericVariables))]
continousVariablesname <- getContinousset(dir)
print("Loaded Dataset")
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
#test_set <- getImputedData(test_set)
#numericVariables = getNumericVariables(test_set)
#categoricVariables <- test_set[setdiff(colnames(test_set), colnames(test_set))]
#write.csv(test_set, paste0(dir, "/Data/ImputedData.csv"), sep = ",")
test_set <- loadImputedtest_set(paste0(dir, "/Data/ImputedData.csv"))
numericVariables = getNumericVariables(test_set)
categoricVariables <- test_set[setdiff(colnames(test_set), colnames(numericVariables))]
print("Finished Missing Value Handling")
test_set <- test_set[1:500,]
#Outlier Handling
source(paste0(dir, "/Code/Outliers.R"))
#z-score one-dimentional outlier handling
test_set_withoutOutlier<- handle.Outliers.for.Matrix(test_set)
print("Finished Outlier Handling")
#Data scaling with z-score
source(paste0(dir, "/Code/scaling.R"))
#traingsset
test_set <- z.scale.data(m=test_set,continous.var=continousVariablesname)
#traingsset_withoutOutlier
test_set_withoutOutlier<- z.scale.data(m=test_set_withoutOutlier,continous.var=continousVariablesname)
print("Finished Scaling")
source(paste0(dir,"/Code/missingValueHandler.R"))
test_set <- loadImputedtest_set(paste0(dir, "/Data/ImputedData.csv"))
test_set <- getImputedData(test_set)
numericVariables = getNumericVariables(test_set)
categoricVariables <- test_set[setdiff(colnames(test_set), colnames(test_set))]
write.csv(test_set, paste0(dir, "/Data/ImputedData_testSet.csv"), sep = ",")
test_set <- loadImputedtest_set(paste0(dir, "/Data/ImputedData_testSet.csv"))
trainingset <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData.csv"))
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
source(paste0(dir,"/Code/missingValueHandler.R"))
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
test_set = getTestset(dir)
numericVariables = getNumericVariables(test_set)
categoricVariables <- test_set[setdiff(colnames(test_set), colnames(numericVariables))]
continousVariablesname <- getContinousset(dir)
print("Loaded Dataset")
source(paste0(dir,"/Code/missingValueHandler.R"))
test_set <- getImputedData(test_set)
write.csv(test_set, paste0(dir, "/Data/ImputedData_testSet.csv"), sep = ",")
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
head(trainingset)
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
source(paste0(dir,"/Code/missingValueHandler.R"))
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed
source(paste0(dir, "/Code/Init.R"))
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
setwd("~/Documents/HU Berlin/WI 1516/BADS/Aufgabe/BADS")
dir<-getwd()
source(paste0(dir, "/Code/Utils.R"))
source(paste0(dir, "/Code/PlotHelper.R"))
#Script to install and load needed packages
source(paste0(dir, "/Code/Init.R"))
#Load Data
source(paste0(dir, "/Code/DataLoader.R"))
test_set = getTestset(dir)
numericVariables = getNumericVariables(test_set)
categoricVariables <- test_set[setdiff(colnames(test_set), colnames(numericVariables))]
continousVariablesname <- getContinousset(dir)
print("Loaded Dataset")
##Missing Value Handling
source(paste0(dir,"/Code/missingValueHandler.R"))
#test_set <- getImputedData(test_set)
#numericVariables = getNumericVariables(test_set)
#categoricVariables <- test_set[setdiff(colnames(test_set), colnames(test_set))]
#write.csv(test_set, paste0(dir, "/Data/ImputedData_testSet.csv"), sep = ",")
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
#numericVariables = getNumericVariables(test_set)
#categoricVariables <- test_set[setdiff(colnames(test_set), colnames(numericVariables))]
print("Finished Missing Value Handling")
test_set <- test_set[1:500,]
#Outlier Handling
source(paste0(dir, "/Code/Outliers.R"))
#z-score one-dimentional outlier handling
test_set_withoutOutlier<- handle.Outliers.for.Matrix(test_set)
print("Finished Outlier Handling")
source(paste0(dir, "/Code/Outliers.R"))
test_set_withoutOutlier<- handle.Outliers.for.Matrix(test_set)
print("Finished Outlier Handling")
source(paste0(dir, "/Code/scaling.R"))
test_set <- z.scale.data(m=test_set,continous.var=continousVariablesname)
test_set <- loadImputedTrainingset(paste0(dir, "/Data/ImputedData_testSet.csv"))
test_set <- loadImputedTestSet(paste0(dir, "/Data/ImputedData_testSet.csv"))
source(paste0(dir, "/Code/DataLoader.R"))
test_set <- loadImputedTestSet(paste0(dir, "/Data/ImputedData_testSet.csv"))
test_set_withoutOutlier<- handle.Outliers.for.Matrix(test_set)
source(paste0(dir, "/Code/scaling.R"))
test_set <- z.scale.data(m=test_set,continous.var=continousVariablesname)
continousVariablesname <- getContinousset(dir)
continousVariablesname
continousVariablesname
trainingset <- trainingset[sample(1:50000,5000, replace = FALSE),]
test_set <- test_set[sample(1:50000,5000, replace = FALSE),]
test_set <- z.scale.data(m=test_set,continous.var=continousVariablesname)
